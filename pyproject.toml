[project]
name = "rdioCallsAPI"
version = "0.1.0"
description = "API for rdio scanner calls"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.116.0",
    "hypercorn>=0.17.0",
    "h2>=4.3.0",
    "pydantic>=2.9.0",
    "pyyaml>=6.0.2",
    "sqlalchemy>=2.0.42",
    "colorlog>=6.9.0",
    "python-multipart>=0.0.20",
    "slowapi>=0.1.9",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.0",
    "httpx>=0.28.0",
    "black>=25.1.0",
    "ruff>=0.12.0",
    "mypy>=1.17.0",
    "types-pyyaml",
    "isort>=6.0.0",
    "types-requests>=2.32.4.20250611",
    "safety>=3.6.0",
    "bandit>=1.8.0",
    "twine>=6.1.0",
    "pytest-benchmark>=5.1.0",
    "psutil>=6.1.1",
    "pip-audit>=2.9.0",
]

[tool.black]
line-length = 88
target-version = ['py313']

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501"]  # Line too long - let black handle it

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "performance: marks tests as performance benchmarks (deselect with '-m \"not performance\"')",
    "benchmark: marks tests as benchmarks (deselect with '-m \"not benchmark\"')",
]
