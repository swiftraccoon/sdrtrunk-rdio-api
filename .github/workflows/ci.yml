name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --all-extras --dev
    
    - name: Check code formatting with black
      run: uv run black --check .
    
    - name: Check import sorting with isort
      run: uv run isort --check-only .
    
    - name: Lint with ruff
      run: uv run ruff check .
    
    - name: Type check with mypy
      run: uv run mypy src
    
    - name: Run tests with pytest and coverage
      run: uv run pytest -v --tb=short --cov=src --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Test CLI help
      run: uv run python cli.py --help
    
    - name: Test configuration generation
      run: |
        uv run python cli.py init --output test-config.yaml
        test -f test-config.yaml
        rm test-config.yaml
