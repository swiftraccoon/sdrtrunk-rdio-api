name: windows-latest

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.13"

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~\.cache\uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Run tests with coverage
      run: uv run pytest -v --tb=short --cov=src --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: windows
        name: windows-py${{ matrix.python-version }}
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Test CLI help
      run: uv run python cli.py --help

    - name: Test configuration generation
      run: |
        uv run python cli.py init --output test-config.yaml
        if (!(Test-Path test-config.yaml)) {
          Write-Error "Config file not generated"
          exit 1
        }

    - name: Test database operations
      run: uv run python cli.py -c test-config.yaml test-db